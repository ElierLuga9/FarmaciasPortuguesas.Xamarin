{"Name":"Facebook iOS SDK","Id":1750,"Alias":"facebookios","Description":"**(Requires iOS 7 or later.)**\n\nIntegrate with Facebook for your iOS app. Build engaging social apps, enable easy login and get more installs:\n\n* **Share:** You can share, send a message, or like content in your app. Also, share Custom Stories with Open Graph.\n* **Login:** You can sign in to your app with their Facebook Login.\n* **App Events:** Understand people\u0027s actions in your app and measure the effectiveness of your Mobile App Ads.\n* **Graph API:** Get data in and out of Facebook\u0027s social graph. Query data, post stories, upload photos and do other tasks.\n* **App Links:** Link to a context in your app.\n\n### AppDelegate.cs\n\n```csharp\nusing Facebook.CoreKit;\n//...\n\n// Get your own App ID at developers.facebook.com/apps\nconst string AppId = \"Your-Id-Here\";\nconst string DisplayName = \"Your_App_Display_Name\";\n\npublic override bool FinishedLaunching (UIApplication app, NSDictionary options)\n{\n\tSettings.AppID = FacebookAppId;\n\tSettings.DefaultDisplayName = DisplayName;\n\t//...\n}\n\npublic override bool OpenUrl (UIApplication application, NSUrl url, string sourceApplication, NSObject annotation)\n{\n\t// We need to handle URLs by passing them to their own OpenUrl in order to make the SSO authentication works.\n\treturn ApplicationDelegate.SharedInstance.OpenUrl (application, url, sourceApplication, annotation);\n}\n\n```\n\n### YourViewController.cs\n\n```csharp\nusing Facebook.LoginKit;\nusing Facebook.CoreKit;\n//...\n\n// For extensive list of available extended permissions refer to \n// https://developers.facebook.com/docs/reference/api/permissions/\nstring [] extendedPermissions = new [] { \"user_about_me\", \"read_stream\"};\nstring [] publishPermissions = new [] { \"publish_stream\" };\n\nLoginButton loginView;\nProfilePictureView pictureView;\n\npublic override void ViewDidLoad ()\n{\n\tbase.ViewDidLoad ();\n\n\t// If you use Native login behavior, you will get all read and publish permisions\n\t// otherwise, set the Read and Publish permissions you want to get\n\tloginView = new LoginButton (new CGRect (51, 0, 218, 46)) {\n\t\tLoginBehavior = LoginBehavior.Native,\n\t\t// ReadPermissions = extendedPermissions,\n\t\t// PublishPermissions = publishPermissions\n\t};\n\n\t// Handle actions once the user is logged in\n\tloginView.Completed += (sender, e) =\u003e {\n\t\tif (e.Error != null) {\n\t\t\t// Handle if there was an error\n\t\t}\n\t\t\n\t\t// Handle your successful login\n\t};\n\n\t// Handle actions once the user is logged out\n\tloginView.LoggedOut += (sender, e) =\u003e {\n\t\t// Handle your logout\n\t};\n\n\t// The user image profile is set automatically once is logged in\n\tpictureView = new ProfilePictureView (new CGRect (50, 0, 220, 220));\n\n\t// Create the label that will hold user\u0027s facebook name\n\tnameLabel = new UILabel (new RectangleF (20, 319, 280, 21)) {\n\t\tTextAlignment = UITextAlignment.Center,\n\t\tBackgroundColor = UIColor.Clear\n\t};\n\n\t// Add views to main view\n\tView.AddSubview (loginView);\n\tView.AddSubview (pictureView);\n\tView.AddSubview (nameLabel);\n}\n\n```\n\n### Controlling the login dialogs\n\nThe Facebook SDK automatically selects the optimal login dialog flow based on the account settings and capabilities of a person\u0027s device.\n\nIf you want to use your System Account of Settings, just change the FB Login\u0027s behavior:\n\n```csharp\n\nloginView.LoginBehavior = LoginBehavior.SystemAccount;\n\n```\n\n*Screenshot generated with [PlaceIt](http://placeit.breezi.com/).*","Version":"4.0.1.2","Summary":"Build great social experiences and get more installs by adding Facebook to your app.","QuickStart":"The Facebook SDK for iOS makes it easier and faster to develop Facebook integrated iOS apps.\n\n## Sample\n\n### AppDelegate.cs\n\n```csharp\nusing Facebook.CoreKit;\n//...\n\n// Get your own App ID at developers.facebook.com/apps\nconst string AppId = \"Your-Id-Here\";\nconst string DisplayName = \"Your_App_Display_Name\";\n\npublic override bool FinishedLaunching (UIApplication app, NSDictionary options)\n{\n\tSettings.AppID = FacebookAppId;\n\tSettings.DefaultDisplayName = DisplayName;\n\t//...\n}\n\npublic override bool OpenUrl (UIApplication application, NSUrl url, string sourceApplication, NSObject annotation)\n{\n\t// We need to handle URLs by passing them to their own OpenUrl in order to make the SSO authentication works.\n\treturn ApplicationDelegate.SharedInstance.OpenUrl (application, url, sourceApplication, annotation);\n}\n\n```\n\n### YourViewController.cs\n\n```csharp\nusing Facebook.LoginKit;\nusing Facebook.CoreKit;\n//...\n\n// For extensive list of available extended permissions refer to \n// https://developers.facebook.com/docs/reference/api/permissions/\nstring [] extendedPermissions = new [] { \"user_about_me\", \"read_stream\"};\nstring [] publishPermissions = new [] { \"publish_stream\" };\n\nLoginButton loginView;\nProfilePictureView pictureView;\n\npublic override void ViewDidLoad ()\n{\n\tbase.ViewDidLoad ();\n\n\t// If you use Native login behavior, you will get all read and publish permisions\n\t// otherwise, set the Read and Publish permissions you want to get\n\tloginView = new LoginButton (new CGRect (51, 0, 218, 46)) {\n\t\tLoginBehavior = LoginBehavior.Native,\n\t\t// ReadPermissions = extendedPermissions,\n\t\t// PublishPermissions = publishPermissions\n\t};\n\n\t// Handle actions once the user is logged in\n\tloginView.Completed += (sender, e) =\u003e {\n\t\tif (e.Error != null) {\n\t\t\t// Handle if there was an error\n\t\t}\n\t\t\n\t\t// Handle your successful login\n\t};\n\n\t// Handle actions once the user is logged out\n\tloginView.LoggedOut += (sender, e) =\u003e {\n\t\t// Handle your logout\n\t};\n\n\t// The user image profile is set automatically once is logged in\n\tpictureView = new ProfilePictureView (new CGRect (50, 0, 220, 220));\n\n\t// Create the label that will hold user\u0027s facebook name\n\tnameLabel = new UILabel (new RectangleF (20, 319, 280, 21)) {\n\t\tTextAlignment = UITextAlignment.Center,\n\t\tBackgroundColor = UIColor.Clear\n\t};\n\n\t// Add views to main view\n\tView.AddSubview (loginView);\n\tView.AddSubview (pictureView);\n\tView.AddSubview (nameLabel);\n}\n\n```\n\n### Controlling the login dialogs\n\nThe Facebook SDK automatically selects the optimal login dialog flow based on the account settings and capabilities of a person\u0027s device.\n\nIf you want to use your System Account of Settings, just change the FB Login\u0027s behavior:\n\n```csharp\n\nloginView.LoginBehavior = LoginBehavior.SystemAccount;\n\n```\n\n## Documentation\n\n* SDK Reference: [https://developers.facebook.com/docs/reference/ios/current/](https://developers.facebook.com/docs/reference/ios/current/)\n\n## Contact \u0026 Discuss\n\n* Bugs Tracker: [https://developers.facebook.com/bugs](https://developers.facebook.com/bugs)\n* StackOverflow: [http://facebook.stackoverflow.com/questions/tagged/facebook-ios-sdk](http://facebook.stackoverflow.com/questions/tagged/facebook-ios-sdk)","Hash":"7fa0cb47d78ebde21ae29e5072c38aee","TargetPlatforms":["ios"],"TrialHash":null}